<UserControl x:Class="PPORise.Views.BattleStatView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PPORise.Views"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Color x:Key="lightBlueColor">#FF145E9D</Color>
        <Color x:Key="darkBlueColor">#FF022D51</Color>
        <Color x:Key="redColor">#FFAA2C27</Color>
        <Color x:Key="greenColor">#FF656A03</Color>
        <Color x:Key="brownColor">#FF513100</Color>
        <SolidColorBrush x:Key="redBrush"
                         Color="{StaticResource redColor}"/>
        <SolidColorBrush x:Key="greenBrush"
                         Color="{StaticResource greenColor}"/>
        <SolidColorBrush x:Key="brownBrush"
                         Color="{StaticResource brownColor}"/>

        <LinearGradientBrush x:Key="menuBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF3A60AD" Offset="0.528"/>
            <GradientStop Color="#FF6A85D8" Offset="0.01"/>
            <GradientStop Color="#FF3464C4" Offset="1"/>
            <GradientStop Color="#FF202E7E" Offset="1"/>

        </LinearGradientBrush>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="{StaticResource menuBrush}"></Setter>
            <Setter Property="BorderThickness" Value="1"></Setter>
            <Setter Property="BorderBrush" Value="White"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"  Background="#FF1F2225"  BorderBrush="#FF1F2225"  BorderThickness="{TemplateBinding BorderThickness}" Margin="0,0,1,0" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="Col0" MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition x:Name="Col3" Width="*"/>
                                    <ColumnDefinition x:Name="Col4" Width="*"/>
                                </Grid.ColumnDefinitions>
                                <!-- ContentPresenter to show an Icon if needed -->
                                <ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
                                <!-- Glyph is a checkmark if needed for a checkable menu -->
                                <Grid Grid.Column="0" Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                                </Grid>
                                <!-- Content for the menu text etc -->
                                <ContentPresenter Grid.Column="1"  
                                Margin="{TemplateBinding Padding}"  
                                x:Name="HeaderHost"  
                                RecognizesAccessKey="True"  
                                ContentSource="Header" VerticalAlignment="Center"/>
                                <!-- Content for the menu IGT -->
                                <ContentPresenter Grid.Column="2"  
                                        Margin="8,1,8,1"  
                                        x:Name="IGTHost"  
                                        ContentSource="InputGestureText"  
                                        VerticalAlignment="Center"/>
                                <!-- Arrow drawn path which points to the next level of the menu -->
                                <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                    <!--<Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>-->
                                    <Path x:Name="ArrowPanelPath" HorizontalAlignment="Right" VerticalAlignment="Stretch" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" RenderTransformOrigin="0.5,0.5" Margin="0,-0.063,2,0.062" d:LayoutOverrides="Height">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="88.864"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                                <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                                <Popup  IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Border x:Name="SubMenuBorder" Background="{Binding Path=Background,ElementName=Border}" BorderBrush="{Binding Path=BorderBrush,ElementName=Border}" BorderThickness="0" Padding="1,1,1,1">
                                        <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True"  >
                                            <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                            <ScrollViewer VerticalScrollBarVisibility="Visible" IsEnabled="True" Background="#FF1F2225">
                                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Style="{x:Null}" Grid.IsSharedSizeScope="True" >
                                                </StackPanel>
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>

                        <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                        <ControlTemplate.Triggers>
                            <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                                <Setter Property="MinWidth" Value="0" TargetName="Col0"/>
                                <Setter Property="Width" Value="Auto" TargetName="Col3"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                <Setter Property="Visibility" Value="Visible" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Padding" Value="6,1,6,1"/>
                                <Setter Property="Width" Value="110" />
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                            </Trigger>
                            <!-- Role = SubMenuItem : this is a child menu item which has children-->
                            <Trigger Property="Role" Value="SubmenuItem">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                <Setter Property="PopupAnimation" Value="Scroll" TargetName="SubMenuPopup"/>
                            </Trigger>
                            <Trigger Property="IsSuspendingPopupAnimation" Value="False">
                                <Setter Property="PopupAnimation" Value="Scroll" TargetName="SubMenuPopup"/>
                            </Trigger>
                            <!-- If no Icon is present the we collapse the Icon Content -->
                            <Trigger Property="Icon" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                            </Trigger>
                            <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="BorderBrush" Value="#ffffff" />
                                <Setter Property="Foreground" Value="Red"  />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="PopupAnimation" Value="Scroll" TargetName="SubMenuPopup"/>
                                <Setter Property="BorderBrush" Value="#ffffff" />
                                <Setter Property="Foreground" Value="Red"  />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  TargetType="{x:Type Menu}">
            <Setter Property="Background"
               Value="#FF1F2225"/>
            <Setter Property="BorderBrush" Value="#FF1F2225"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border Name="MainBorder" BorderThickness="1,1,1,1" Margin="0,0,1,0" Background="{TemplateBinding Background}"  BorderBrush="#FF1F2225">
                            <WrapPanel ClipToBounds="True"
                        Orientation="Horizontal"
                        IsItemsHost="True" />
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Background="#FF1F2225">
        <Border BorderThickness="1,0,1,1" BorderBrush="#FF1F2225" Background="#FF1F2225">
            <ListView SourceUpdated="ListViewTargetUpdated" TargetUpdated="ListViewTargetUpdated" Name="EnemiesListView" BorderThickness="0" FontSize="13.333" Background="#FF1F2225" Foreground="#99aab5"
                        AllowDrop="True" PreviewMouseDown="EnemiesListView_OnPreviewMouseDown"
                        Width="Auto"
                        Height="Auto">
                <ListView.View>
                    <GridView>
                        <GridViewColumn DisplayMemberBinding="{Binding Id}" Width="Auto">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Id" />
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Name}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Name" Click="ItemHeader_OnClick"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Level}" Width="Auto">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Level" Click="ItemHeader_OnClick" />
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Status}" Width="Auto">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Status" Click="ItemHeader_OnClick"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding IsShiny}" Width="Auto">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Is Shiny" Click="ItemHeader_OnClick"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding IsElite}" Width="Auto">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Is Elite" Click="ItemHeader_OnClick"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn DisplayMemberBinding="{Binding Health}" Width="Auto">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="HP" Click="ItemHeader_OnClick"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
        </Border>
    </Grid>
</UserControl>
